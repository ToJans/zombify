{
  "name": "mocha-cakes",
  "description": "bdd stories add-on for mocha test framework with cucumber given/then/when syntax.",
  "version": "0.9.0",
  "author": {
    "name": "Quang Van",
    "email": "quangvvv@gmail.com"
  },
  "homepage": "https://github.com/quangv/mocha-cakes",
  "repository": {
    "type": "git",
    "url": "git://github.com/quangv/mocha-cakes.git"
  },
  "dependencies": {
    "coffee-script": "*",
    "colors": "*",
    "underscore": "*",
    "optimist": "*",
    "underscore.string": "*"
  },
  "devDependencies": {
    "mocha": "*"
  },
  "keywords": [
    "mocha",
    "bdd",
    "stories",
    "cucumber",
    "test",
    "testing",
    "gherkin",
    "acceptance",
    "customer",
    "functional",
    "end-user"
  ],
  "main": "./index.js",
  "readme": "# What is it?        \n\n[Gherkin](https://github.com/cucumber/cucumber/wiki/Gherkin)-[Cucumber](http://cukes.info/) syntax add-on for [mocha](https://github.com/visionmedia/mocha) javascript/node test framework for customer acceptance testing.\n\nProvides high-level/functional/acceptance test organization lingo, using _'Feature'_, _Stories_, _'Scenarios'_, _'Given/Then/When'_.\n\n![Mocha-Cakes Pretty Output](http://i.imgur.com/cKUO8.png)\n\n# Mocha-Cakes Commands Breakdown\n  \n  Mocha-Cakes extends Mocha, by adding on helpful commands and print-outs for Acceptance Tests. (Given, When, Then, etc.)\n\n##Acceptance Tests\n\n`Feature`, `Scenario`  (maps to _describe_)\n\n`Given`, `When`, `Then` (maps to _it_, but if first message argument is ommited, it'll be a _describe_)\n\n`And`, `But`, `I` (maps to _it_ but if first message argument is ommited, it'll be a _describe_)\n\n### GWTab\n  GWTab commands can map to a describe if the message argument is ommited.\n\n  ```coffeescript\n    Given 'I am at home', ->  # it's an it\n      home.should.eql 'home'\n\n    Given ->  # it's a describe\n      it 'is dark', ->\n        outside.should.eql 'dark'\n  ```\n\n## Grey-Box, System Tests\n\n`System` (if it has a message it'll be an  _it_, if not it'll be a _describe_ with System label, useful for testing (grey box) system resources, database, not directly observable by Customer etc.)\n\n```coffeescript\nGiven ->\n  System 'Logged Out', ->\n\nThen ->\n  System ->\n    it 'should log in', ->\n```\n\n## Pretty Commands for Specs/Unit Tests\n\n`Describe` (maps to _describe_ used for things like filenames)\n\n```coffeescript\nDescribe 'lib/file.coffee'  # filename\n  describe '+copy()', ->\n    it 'should copy files...', ->\n```\n\n## Custom\n\nMocha-Cakes 0.7 added the `I` command, to do things like:\n\n```\nGiven ->\n  I 'have a test', ->\n  And 'I have another', ->\nThen ->\n  I 'should be good', ->\n  But 'make sure I am also', ->\n```\n\n# Example\n\n_Coffee-Script: test.coffee_ \n\n```coffeescript\n\nrequire 'mocha-cakes'\n\nFeature \"New Feature\",\n  \"In order to use cool feature\",\n  \"as a new user\",\n  \"I want do include this\", ->\n\n    Scenario \"Singing\", ->\n\n      voice = null\n\n      Given \"I am a good singing\", ->\n      When \"I sing\", ->\n        voice = 'good'\n      Then \"it should sound good\", ->\n        it 'sound good', ->\n          voice.should.eql 'good'\n\n```\n \nRun this test using mocha command:\n\n`mocha test.coffee -R spec -r should`\n\n# What's going on?\n\nMocha-cakes gives you access to function names \n\n_\"Feature\", \"Scenario\"_ that wraps around mocha's `describe()`. \n\n_\"Given\", \"When\", \"Then\", \"And\", \"But\"_ wraps around mocha's `it()`.\n\nAlso bonus, \"Describe\" wraps around mocha's _describe()_ also, that could be used at the start of spec files. It prints out in bolded blue header with `-R Spec`.\n\nSo the above would output something like:\n\n```cucumber\n  Feature: New Feature \n\n  In order to use cool feature\n  as a new user\n  I want do include this\n    \n    Scenario: Singing\n      ✓ Given: I am a good singing\n      ✓ When: I sing\n      ✓ Then: it should sound good\n        ✓ sound good  \n\n\n  ✔ 1 tests complete (3ms)\n\n```\n\n## How to Use\n\nMocha-Cakes provides GWT commands to mocha, and pretty prints it.\n\nTo use just:\n\n1. require 'mocha-cakes'\n\nThen you will have access to the mocha-cakes commands _Feature, Scenario, Given, When, Then, etc._\n\nAlso to _see_ the pretty output, use the _spec_ reporter\n\n`mocha -R spec -r mocha-cakes acceptance_tests.coffee`\n\nNote: You can use mocha-cakes with plain javascript.\n\n## Features\n\n```coffeescript\n\nrequire 'mocha-cakes'\n\nFeature \"Big Buttons\",\n  \"As a user\",\n  \"I want big buttons\",\n  \"So it'll be easier to use\", ->\n\n    Scenario \"On Homepage\", ->\n\n      Given \"I am a new user\", ->\n      When \"I go to homepage\", ->\n\n      And \"I scroll down\", ->\n      Then \"I see big buttons\", ->\n      But \"no small text\", ->\n\n      Given ->  # Previous\n      When \"I scroll down more\", ->\n      And \"I reach end of page\", ->\n      Then \"all I see is big buttons\", ->\n\n      Describe 'test.spec.coffee', ->\n\n    Scenario false, 'Skip Me', ->\n\n```\n\n_\\* Remember, they're all either `describe()`'s or `it()`_\n\n## Mix & Match\n\nAlso you could still mix-in regular mocha syntax\n\n```\nFeature \"Mix & Match\" ->\n  Scenario 'Mix-in Mocha', ->\n    Given \"I'm using Cakes\", ->\n    Then ->\n      describe 'Also using regular mocha', ->\n        I 'should be able to do this', ->\n          true.should.be true\n        it 'should work too', ->\n          true.should.be true\n```\n\n## Reference\n\n[The WHY behind TDD/BDD and the HOW with RSpec](http://www.slideshare.net/bmabey/the-why-behind-tddbdd-and-the-how-with-rspec)\n\n\n# Use it\n\nInstall:\n\n    cd my_project\n    npm -d install mocha-cakes\n\n# Mocha Reporter Support\n\nMocha-Cakes was developed with the `-R spec` in mind.\n\nYou can use Mocha-Cakes also with the `-R doc` reporter.\n\nAll other reporters should function, but have not been tested.\n\n\nIf you have any questions, issues or comments, please leave them on [mocha-cakes' github](https://github.com/quangv/mocha-cakes/issues).\n\nThanks!\n\n---\n\n\\*Special Thanks\\* to [TJ Holowaychuk](https://github.com/visionmedia) for Mocha, awesome test framework.\n",
  "_id": "mocha-cakes@0.9.0",
  "_from": "mocha-cakes"
}
